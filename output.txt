Algorithm Analysis Homework 9
May 23 (Due next Tuesday class)
1. Our discussion of Dijkstra’s shortest-path algorithm used a heap-based priority queue. When
the algorithm runs, three heap operations are used, namely, push(), pop() and changeKey().
Note that changeKey() is used when d[v] is updated in the following for-loop:
for each neighbor v (in Q) of u
if d[u]+w(u,v) < d[v]
// if newly added vertex u makes v closer
d[v] <- d[u]+w(u,v)
// update the distance (which updates Q)
parent[v] <- u
Explain, in less than ﬁve lines, how these three operations run in O(log n) time when a
priority queue has n elements.
2. In Section 6.6.1, we discussed the matirx
A→= I →A →A2 →A3.
(a) What does (i, j)th element of A→represent?
(b) Does the usage of ↑in A→make sense? Why did we not deﬁne as follows?
A→= I →A →A2 →A3 →A4 →· · · .
3. Consider the following graph:
Floyd’s all-pairs shortest distance algorithm gives matrices D(5) and P, as we discussed in
the class. Figure out the matrices D(5) and P without using the algorithm :)
103
